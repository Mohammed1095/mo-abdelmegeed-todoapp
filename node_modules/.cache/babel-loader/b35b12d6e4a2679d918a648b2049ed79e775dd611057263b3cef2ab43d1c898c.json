{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React-projects\\\\mo-abdelmegeed\\\\my-todo-app-1\\\\src\\\\components\\\\FormInput.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, gray 30%, black 90%)',\n    border: 0,\n    color: 'white',\n    height: 30,\n    padding: '0 10px',\n    whiteSpace: 'nowrap',\n    margin: '15px 0 0 20px'\n  },\n  label: {\n    width: '80%'\n  }\n});\nconst TodoCreator = _ref => {\n  _s();\n  let {\n    theme,\n    todo,\n    setTodo,\n    clearInput,\n    inputRef,\n    isInputEmpty,\n    preventSubmit\n  } = _ref;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form__input\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.label,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"What's need to be done?\" // better accessibility with Material UI\n          ,\n          value: todo,\n          variant: \"outlined\",\n          onChange: e => setTodo(e.target.value),\n          onFocus: clearInput,\n          ref: inputRef,\n          \"aria-describedby\": \"component-error-text\",\n          onKeyPress: preventSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), !isInputEmpty ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            id: \"component-error-text\",\n            children: \"Task can't be empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        alt: \"add-note\",\n        className: classes.root,\n        onKeyPress: preventSubmit,\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoCreator, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = TodoCreator;\nexport default TodoCreator;\nvar _c;\n$RefreshReg$(_c, \"TodoCreator\");","map":{"version":3,"names":["React","Button","makeStyles","ThemeProvider","TextField","FormHelperText","FormControl","useStyles","root","background","border","color","height","padding","whiteSpace","margin","label","width","TodoCreator","theme","todo","setTodo","clearInput","inputRef","isInputEmpty","preventSubmit","classes","e","target","value"],"sources":["C:/Users/User/Desktop/React-projects/mo-abdelmegeed/my-todo-app-1/src/components/FormInput.jsx"],"sourcesContent":["import  React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles({\n    root: {\n        background: 'linear-gradient(45deg, gray 30%, black 90%)',\n        border: 0,\n        color: 'white',\n        height: 30,\n        padding: '0 10px',\n        whiteSpace: 'nowrap',\n        margin: '15px 0 0 20px',\n    },\n    label: {\n        width: '80%'\n    }\n});\n\n\nconst TodoCreator = ({ theme, todo, setTodo, clearInput, inputRef, isInputEmpty, preventSubmit }) => {\n    const classes = useStyles();\n\n    return (\n        <div className=\"form__input\">\n            <ThemeProvider theme={theme}>\n                <FormControl   className={classes.label}>\n                    <TextField\n                        id=\"outlined-basic\"\n                        label=\"What's need to be done?\" // better accessibility with Material UI\n                        value={todo}\n                        variant=\"outlined\"\n                        onChange={(e) => setTodo(e.target.value)}\n                        onFocus={clearInput}\n                        ref={inputRef}\n                        aria-describedby=\"component-error-text\"\n                        onKeyPress={preventSubmit}\n                    />\n\n                    { !isInputEmpty ?\n                        <></>\n                        :\n                        <>\n                            <FormHelperText id=\"component-error-text\">Task can't be empty</FormHelperText>\n                        </>\n                    }\n                </FormControl>\n                <Button\n                    type=\"submit\"\n                    alt=\"add-note\"\n                    className={classes.root}\n                    onKeyPress={preventSubmit}\n                >\n                    Add task\n                </Button>\n            </ThemeProvider>\n        </div>\n    )\n\n}\n\nexport  default TodoCreator;"],"mappings":";;AAAA,OAAQA,KAAK,MAAM,OAAO;AAC1B,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAASC,UAAU,EAAEC,aAAa,QAAQ,0BAA0B;AACpE,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,WAAW,MAAM,+BAA+B;AAAC;AAAA;AAExD,MAAMC,SAAS,GAAGL,UAAU,CAAC;EACzBM,IAAI,EAAE;IACFC,UAAU,EAAE,6CAA6C;IACzDC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,QAAQ;IACjBC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE;EACZ,CAAC;EACDC,KAAK,EAAE;IACHC,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAGF,MAAMC,WAAW,GAAG,QAAiF;EAAA;EAAA,IAAhF;IAAEC,KAAK;IAAEC,IAAI;IAAEC,OAAO;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,YAAY;IAAEC;EAAc,CAAC;EAC5F,MAAMC,OAAO,GAAGnB,SAAS,EAAE;EAE3B,oBACI;IAAK,SAAS,EAAC,aAAa;IAAA,uBACxB,QAAC,aAAa;MAAC,KAAK,EAAEY,KAAM;MAAA,wBACxB,QAAC,WAAW;QAAG,SAAS,EAAEO,OAAO,CAACV,KAAM;QAAA,wBACpC,QAAC,SAAS;UACN,EAAE,EAAC,gBAAgB;UACnB,KAAK,EAAC,yBAAyB,CAAC;UAAA;UAChC,KAAK,EAAEI,IAAK;UACZ,OAAO,EAAC,UAAU;UAClB,QAAQ,EAAGO,CAAC,IAAKN,OAAO,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UACzC,OAAO,EAAEP,UAAW;UACpB,GAAG,EAAEC,QAAS;UACd,oBAAiB,sBAAsB;UACvC,UAAU,EAAEE;QAAc;UAAA;UAAA;UAAA;QAAA,QAC5B,EAEA,CAACD,YAAY,gBACX,qCAAK,gBAEL;UAAA,uBACI,QAAC,cAAc;YAAC,EAAE,EAAC,sBAAsB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAqC,iBAC/E;MAAA;QAAA;QAAA;QAAA;MAAA,QAEG,eACd,QAAC,MAAM;QACH,IAAI,EAAC,QAAQ;QACb,GAAG,EAAC,UAAU;QACd,SAAS,EAAEE,OAAO,CAAClB,IAAK;QACxB,UAAU,EAAEiB,aAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGrB;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACd;AAGd,CAAC;AAAA,GAvCKP,WAAW;EAAA,QACGX,SAAS;AAAA;AAAA,KADvBW,WAAW;AAyCjB,eAAgBA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}