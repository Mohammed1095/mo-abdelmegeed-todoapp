{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React-projects\\\\mo-abdelmegeed\\\\my-todo-app-1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Form from \"./components/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDesignTokens = mode => ({\n  palette: {\n    mode,\n    ...(mode === \"light\" ? {\n      // palette values for light mode\n      primary: amber,\n      divider: amber[200],\n      text: {\n        primary: grey[900],\n        secondary: grey[800]\n      }\n    } : {\n      // palette values for dark mode\n      primary: deepOrange,\n      divider: deepOrange[700],\n      background: {\n        default: deepOrange[900],\n        paper: deepOrange[900]\n      },\n      text: {\n        primary: \"#fff\",\n        secondary: grey[500]\n      }\n    })\n  }\n});\nfunction App() {\n  _s();\n  const [mode, setMode] = React.useState < PaletteMode > \"light\";\n  const colorMode = React.useMemo(() => ({\n    // The dark mode switch would invoke this method\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === \"light\" ? \"dark\" : \"light\");\n    }\n  }), []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x2cO8U3viyF15PiagFofKLJsml4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ThemeProvider","createTheme","CssBaseline","Form","getDesignTokens","mode","palette","primary","amber","divider","text","grey","secondary","deepOrange","background","default","paper","App","setMode","React","useState","PaletteMode","colorMode","useMemo","toggleColorMode","prevMode","darkTheme"],"sources":["C:/Users/User/Desktop/React-projects/mo-abdelmegeed/my-todo-app-1/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nimport Form from \"./components/Form\";\n\nconst getDesignTokens = (mode: PaletteMode) => ({\n  palette: {\n    mode,\n    ...(mode === \"light\"\n      ? {\n          // palette values for light mode\n          primary: amber,\n          divider: amber[200],\n          text: {\n            primary: grey[900],\n            secondary: grey[800],\n          },\n        }\n      : {\n          // palette values for dark mode\n          primary: deepOrange,\n          divider: deepOrange[700],\n          background: {\n            default: deepOrange[900],\n            paper: deepOrange[900],\n          },\n          text: {\n            primary: \"#fff\",\n            secondary: grey[500],\n          },\n        }),\n  },\n});\n\nfunction App() {\n  const [mode, setMode] = React.useState < PaletteMode > \"light\";\n  const colorMode = React.useMemo(\n    () => ({\n      // The dark mode switch would invoke this method\n      toggleColorMode: () => {\n        setMode((prevMode: PaletteMode) =>\n          prevMode === \"light\" ? \"dark\" : \"light\"\n        );\n      },\n    }),\n    []\n  );\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <div className=\"wrapper\">\n        <h1>Todo List</h1>\n        <Form />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,aAAa,EAAEC,WAAW,QAAQ,sBAAsB;AACjE,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,OAAOC,IAAI,MAAM,mBAAmB;AAAC;AAErC,MAAMC,eAAe,GAAIC,IAAiB,KAAM;EAC9CC,OAAO,EAAE;IACPD,IAAI;IACJ,IAAIA,IAAI,KAAK,OAAO,GAChB;MACE;MACAE,OAAO,EAAEC,KAAK;MACdC,OAAO,EAAED,KAAK,CAAC,GAAG,CAAC;MACnBE,IAAI,EAAE;QACJH,OAAO,EAAEI,IAAI,CAAC,GAAG,CAAC;QAClBC,SAAS,EAAED,IAAI,CAAC,GAAG;MACrB;IACF,CAAC,GACD;MACE;MACAJ,OAAO,EAAEM,UAAU;MACnBJ,OAAO,EAAEI,UAAU,CAAC,GAAG,CAAC;MACxBC,UAAU,EAAE;QACVC,OAAO,EAAEF,UAAU,CAAC,GAAG,CAAC;QACxBG,KAAK,EAAEH,UAAU,CAAC,GAAG;MACvB,CAAC;MACDH,IAAI,EAAE;QACJH,OAAO,EAAE,MAAM;QACfK,SAAS,EAAED,IAAI,CAAC,GAAG;MACrB;IACF,CAAC;EACP;AACF,CAAC,CAAC;AAEF,SAASM,GAAG,GAAG;EAAA;EACb,MAAM,CAACZ,IAAI,EAAEa,OAAO,CAAC,GAAGC,KAAK,CAACC,QAAQ,GAAGC,WAAW,GAAG,OAAO;EAC9D,MAAMC,SAAS,GAAGH,KAAK,CAACI,OAAO,CAC7B,OAAO;IACL;IACAC,eAAe,EAAE,MAAM;MACrBN,OAAO,CAAEO,QAAqB,IAC5BA,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CACxC;IACH;EACF,CAAC,CAAC,EACF,EAAE,CACH;EACD,oBACE,QAAC,aAAa;IAAC,KAAK,EAAEC,SAAU;IAAA,wBAC9B,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf;MAAK,SAAS,EAAC,SAAS;MAAA,wBACtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAClB,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACQ;AAEpB;AAAC,GAtBQT,GAAG;AAAA,KAAHA,GAAG;AAwBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}